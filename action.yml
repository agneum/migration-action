name: 'Database Lab: realistic DB testing in CI'
branding:
  icon: 'database'  
  color: 'orange'
description: 'Check database migrations with the Database Lab Engine'
inputs:
  owner:
    description: 'The owner of the repository to check'
    required: true
    default: ${{ github.repository_owner }}
  repo:
    description: 'The repo to check'
    required: true
    default: ${{ github.event.repository.name }}
  ref:
    description: 'The input represents a ref parameter, which can be a SHA, branch, or tag'
    required: true
    default: ${{ github.ref }}
  pull_request:
    description: 'Link to the pull request'
    required: false
    default: ${{ github.event.pull_request.html_url }}
  compare:
    description: 'The compare link'
    required: false
    default: ${{ github.event.compare }}
  commit_sha:
    description: 'Commit SHA'
    required: false
    default: ${{ github.event.after }}
  author_name:
    description: 'Author name'
    required: false
    default: ${{ github.event.head_commit.author.name }}
  commands:
    description: 'List of commands to run DB migrations'
    required: true
  dbname:
    description: 'The database that the workflow is running with'
    required: false
    default: ""
  migration_envs:
    description: 'List of environment variables that will be set during migrations running'
    required: false
  download_artifacts:
    description: 'Option to download artifacts'
    required: false
    default: "false"

  observation_interval:
    description: 'Observation interval'
    required: false
    default: "10"
  max_lock_duration:
    description: 'Max lock duration'
    required: false
    default: "10"
  max_duration:
    description: 'Max duration'
    required: false
    default: "3600"

outputs:
  response:
    value: Done
    description: 'The result of migration checks'

runs:
  using: 'composite'
  steps:
    - name: DB migration with DLE
      uses: agneum/migration-action@v0.0.13

    - run: cat response.json || true
      shell: bash

    - run: |
        echo 'JSON_RESPONSE<<EOF' >> $GITHUB_ENV
        echo '```json' >> $GITHUB_ENV
        cat response.json >> $GITHUB_ENV
        echo '```' >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash

    - run: ls /artifacts || true
      shell: bash

    - name: Post comment to PR
      if: ${{ github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v2
      env:
        COMMENT: |
          ### Summary        
            ${{ env.JSON_RESPONSE }}
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ env.COMMENT }}
